#Hierarchical poisson-logistic model with varying resource (rabbit) availability
model{

for(k in 1:sites){
  #process model
   #starting abund (priors)
   site.r.eff[k]~dnorm(r.mean , tau.site) #random site effects on r.max
   site.r.eff.rabbits[k]~dnorm(r.mean.rabbits, tau.site.rabbits) #random site effects on r.max
   
   #non-heirarchically centred versions of the random effects for plotting
   site.r.eff.centered[k]<-site.r.eff[k]-r.mean
   site.r.eff.rabbits.centered[k]<-site.r.eff.rabbits[k]-r.mean.rabbits
   mu.fox[start[k], k]~dunif(0, 100)
   mu.rabbits[start[k], k]~dunif(0, 100)
for(t in (start[k]+1):end[k]){
  ##-- process sub-model for foxes
  r.fox.expected[t, k]<- log(mu.rabbits[t-1, k])* beta[1] #numerical response
                    +log(mu.fox[t-1, k])*beta[2] #dense depend.
                    +((rain[k, t+rain.offset]+rain[k, t+rain.offset]+1)/2)*beta[3] #rain effect of r.
                    +winter[t]*beta[4]  #effect of winter on r
                    +site.r.eff[k]
                   #can add extra terms for weather, site, time effects here.
  r.fox[t, k]~dnorm(r.fox.expected[t, k], tau.proc)
  mu.fox[t, k]<-mu.fox[t-1, k]*exp(r.fox[t, k])  
  
  ##---process sub-model for rabbits
  r.rabbits.expected[t, k]<-  log(mu.rabbits[t-1, k])* beta[5] 
                    +rain[k, t+rain.offset+1]*beta[6] #rain effect of r.
                     +winter[t]*beta[7] #effect of winter on rabbit r.
                    +site.r.eff.rabbits[k]

  r.rabbits[t, k]~dnorm(r.rabbits.expected[t, k], tau.proc.rabbits)
  mu.rabbits[t, k]<-mu.rabbits[t-1, k]*exp(r.rabbits[t, k])  


   } #t
} #k
###################################
#observation models
###################################
for(i in 1:Nobs){
expected.count[i]<-mu.fox[obs_time[i], site.code[i]] * (trans.length[i]/1000)
fox.count[i]~dpois(expected.count[i]) #poisson obs model

expected.rabbits[i]<-mu.rabbits[obs_time[i], site.code[i]] * (trans.length[i]/1000)
rabbit.count[i]~dpois(expected.rabbits[i])
}#i

###################################
#priors
###################################
r.mean~dnorm(0, 0.001)
r.mean.rabbits~dnorm(0, 0.001)
#informative prior? dnorm(log(sqrt(2.86)), pow(0.3, -2)
#r.mean~dnorm(0.525, 4)
#informative prior? dnorm(log(sqrt(7.85)), pow(0.3, -2)
#r.mean.rabbits~dnorm(1.03, 4)

for(u in 1:7){
beta[u]~dnorm(0, 0.001)
}

sigma.proc~dunif(0, 5)
tau.proc<-pow(sigma.proc, -2)

sigma.proc.rabbits~dunif(0, 5)
tau.proc.rabbits<-pow(sigma.proc.rabbits, -2)

sigma.site~dunif(0, 5)
tau.site<-pow(sigma.site, -2)

sigma.site.rabbits~dunif(0, 5)
tau.site.rabbits<-pow(sigma.site.rabbits, -2)

sigma[1]<-sigma.proc
sigma[2]<-sigma.proc.rabbits
sigma[3]<-sigma.site
sigma[4]<-sigma.site.rabbits

}
